let container = document.querySelector('.container');
let currentLanguage = 'en'; // –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é English

const translations = {
  en: {
    countries: "Countries",
    language: "Language",
    account: "Account",
    contact: "Contact",
    footer: "ALL IS GOOD ¬©",
    weatherTitle: "Hourly Weather Forecast",
    wind: "Wind Speed",
    humidity: "Humidity",
    rain: "Chance of Rain"
  },
  ru: {
    countries: "–°—Ç—Ä–∞–Ω—ã",
    language: "–Ø–∑—ã–∫",
    account: "–ê–∫–∫–∞—É–Ω—Ç",
    contact: "–ö–æ–Ω—Ç–∞–∫—Ç",
    footer: "–í–°–Å –•–û–†–û–®–û ¬©",
    weatherTitle: "–ü–æ—á–∞—Å–æ–≤–æ–π –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã",
    wind: "–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞",
    humidity: "–í–ª–∞–∂–Ω–æ—Å—Ç—å",
    rain: "–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –¥–æ–∂–¥—è"
  },
  hy: {
    countries: "‘µ÷Ä’Ø÷Ä’∂’•÷Ä",
    language: "‘º’•’¶’∏÷Ç",
    account: "’Ä’°’∑’´’æ",
    contact: "‘ø’°’∫",
    footer: "‘±’Ñ‘µ’Ü ‘ª’Ü’â ‘º‘±’é ‘∑ ¬©",
    weatherTitle: "‘∫’°’¥’°’µ’´’∂ ’•’≤’°’∂’°’Ø’´ ’Ø’°’∂’≠’°’ø’•’Ω’∏÷Ç’¥",
    wind: "’î’°’¥’∏÷Ç ’°÷Ä’°’£’∏÷Ç’©’µ’∏÷Ç’∂",
    humidity: "‘Ω’∏’∂’°’æ’∏÷Ç’©’µ’∏÷Ç’∂",
    rain: "’è’•’≤’∏÷Ç’¥’∂’•÷Ä’´ ’∞’°’æ’°’∂’°’Ø’°’∂’∏÷Ç’©’µ’∏÷Ç’∂"
  }
};

// –ü–µ—Ä–µ–≤–æ–¥—ã –¥–ª—è –∫–æ–¥–æ–≤ –ø–æ–≥–æ–¥—ã (–±–µ—Ä—ë–º —Å–∞–º—ã–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –∫–æ–¥—ã)
const weatherCodeTranslations = {
  1000: { en: "Clear", ru: "–Ø—Å–Ω–æ", hy: "’Ñ’°÷Ñ’∏÷Ç÷Ä" },
  1003: { en: "Partly cloudy", ru: "–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–±–ª–∞—á–Ω–æ—Å—Ç—å", hy: "’Ñ’°’Ω’°’¥’¢ ’°’¥’∫’°’¥’°’Æ" },
  1006: { en: "Cloudy", ru: "–û–±–ª–∞—á–Ω–æ", hy: "‘±’¥’∫’°’¥’°’Æ" },
  1009: { en: "Overcast", ru: "–ü–∞—Å–º—É—Ä–Ω–æ", hy: "’Ñ’°’º’°’≠’¨’°’∫’°’ø" },
  1030: { en: "Mist", ru: "–¢—É–º–∞–Ω", hy: "’Ñ’°’º’°’≠’∏÷Ç’≤" },
  1063: { en: "Patchy rain possible", ru: "–í–æ–∑–º–æ–∂–µ–Ω –∫—Ä–∞—Ç–∫–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –¥–æ–∂–¥—å", hy: "’Ä’∂’°÷Ä’°’æ’∏÷Ä ’ß ’©’•’©÷á ’°’∂’±÷Ä÷á" },
  1066: { en: "Patchy snow possible", ru: "–í–æ–∑–º–æ–∂–µ–Ω –∫—Ä–∞—Ç–∫–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å–Ω–µ–≥", hy: "’Ä’∂’°÷Ä’°’æ’∏÷Ä ’ß ’©’•’©÷á ’±’µ’∏÷Ç’∂" },
  1087: { en: "Thunderstorm", ru: "–ì—Ä–æ–∑–∞", hy: "‘±’¥’∫÷Ä’∏’∫" },
  1114: { en: "Blizzard", ru: "–ú–µ—Ç–µ–ª—å", hy: "’Å’µ’°’∂ ÷É’∏’©’∏÷Ä’´’Ø" },
  1135: { en: "Fog", ru: "–¢—É–º–∞–Ω", hy: "’Ñ’°’º’°’≠’∏÷Ç’≤" },
  1180: { en: "Light rain", ru: "–ù–µ–±–æ–ª—å—à–æ–π –¥–æ–∂–¥—å", hy: "‘π’•’©÷á ’°’∂’±÷Ä÷á" },
  1183: { en: "Light rain", ru: "–ù–µ–±–æ–ª—å—à–æ–π –¥–æ–∂–¥—å", hy: "‘π’•’©÷á ’°’∂’±÷Ä÷á" },
  1186: { en: "Moderate rain", ru: "–£–º–µ—Ä–µ–Ω–Ω—ã–π –¥–æ–∂–¥—å", hy: "’Ñ’´’ª’´’∂ ’°’∂’±÷Ä÷á" },
  1195: { en: "Heavy rain", ru: "–°–∏–ª—å–Ω—ã–π –¥–æ–∂–¥—å", hy: "‘±÷Ä’°’£ ’°’∂’±÷Ä÷á" },
  // –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
};

function translateConditionByCode(code) {
  if (!weatherCodeTranslations[code]) return "Unknown";
  return weatherCodeTranslations[code][currentLanguage] || weatherCodeTranslations[code]["en"];
}

function fetchWeather() {
  // API –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç lang=en –∏ lang=ru, –¥–ª—è hy –±—É–¥–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å en –∏ —Ä—É—á–Ω–æ–π –ø–µ—Ä–µ–≤–æ–¥
  const apiLang = (currentLanguage === 'hy') ? 'en' : currentLanguage;

  fetch(`https://api.weatherapi.com/v1/forecast.json?key=bc2b6d561b0c4c919e1113322252904&q=Yerevan&days=1&aqi=no&alerts=no&lang=${apiLang}`)
    .then(response => response.json())
    .then(data => fun1H(data.forecast.forecastday[0].hour));
}

function fun1H(hours) {
  const t = translations[currentLanguage];
  container.innerHTML = `<h2 class="title">${t.weatherTitle}</h2>`;

  hours.forEach(hour => {
    const conditionText = translateConditionByCode(hour.condition.code);

    let el = document.createElement('div');
    el.classList.add('hour-forecast');

    el.innerHTML = `
      <div class="forecast-time"><strong>${hour.time.split(' ')[1]}</strong></div>
      <div class="forecast-temp">${hour.temp_c}¬∞C</div>
      <div class="forecast-condition">${conditionText}</div>
      <div class="forecast-details">
        <p>${t.wind}: ${hour.wind_kph} km/h</p>
        <p>${t.humidity}: ${hour.humidity}%</p>
        <p>${t.rain}: ${hour.chance_of_rain}%</p>
      </div>
      <img class="forecast-icon" src="${hour.condition.icon}" alt="${conditionText}" />
    `;

    container.appendChild(el);
  });
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
fetchWeather();

// --- –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —è–∑—ã–∫–æ–º –∏ –º–æ–¥–∞–ª—å–Ω—ã–º –æ–∫–Ω–æ–º ---
const languageBtn = document.getElementById('languageBtn');
const modal = document.getElementById('languageModal');
const closeModal = document.getElementById('closeModal');
const languageForm = document.getElementById('languageForm');

languageBtn.addEventListener('click', e => {
  e.preventDefault();
  modal.style.display = 'block';
});

closeModal.addEventListener('click', () => {
  modal.style.display = 'none';
});

window.addEventListener('click', e => {
  if (e.target == modal) modal.style.display = 'none';
});

languageForm.addEventListener('submit', e => {
  e.preventDefault();
  currentLanguage = languageForm.language.value;
  applyLanguage(translations[currentLanguage]);
  fetchWeather();
  modal.style.display = 'none';
});

function applyLanguage(labels) {
  const navLinks = document.querySelectorAll('nav ul li a');
  navLinks[0].textContent = labels.countries;
  navLinks[1].textContent = labels.language;
  navLinks[2].textContent = labels.account;
  navLinks[3].textContent = labels.contact;
  document.getElementById('fp').textContent = labels.footer;
}

// --- Language Modal ---
const languageBtn = document.getElementById('languageBtn');
const languageModal = document.getElementById('languageModal');
const closeModal = document.getElementById('closeModal');
const languageForm = document.getElementById('languageForm');

languageBtn.addEventListener('click', e => {
  e.preventDefault();
  languageModal.style.display = 'block';
});

closeModal.addEventListener('click', () => {
  languageModal.style.display = 'none';
});

window.addEventListener('click', e => {
  if (e.target === languageModal) languageModal.style.display = 'none';
});

// --- Donate Modal ---
const donateBtn = document.getElementById('donateBtn');
const donateModal = document.getElementById('donateModal');
const closeDonate = document.getElementById('closeDonate');
const confirmDonate = document.getElementById('confirmDonate');
const donateAmount = document.getElementById('donateAmount');

donateBtn.addEventListener('click', e => {
  e.preventDefault();
  donateModal.style.display = 'block';
});

closeDonate.addEventListener('click', () => {
  donateModal.style.display = 'none';
});

window.addEventListener('click', e => {
  if (e.target === donateModal) donateModal.style.display = 'none';
});

const myWallet = "0x00C48687d0C85e4cc1D545137Ce18E33fB5eF1c8";

confirmDonate.addEventListener('click', () => {
  const amount = donateAmount.value;
  // –°—Å—ã–ª–∫–∞ –¥–ª—è Bitget Wallet (–æ—Ç–∫—Ä–æ–µ—Ç—Å—è –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–µ)
  const url = `ethereum:${myWallet}`;
  
  // –ï—Å–ª–∏ Bitget –Ω–µ –ø–æ–¥—Ö–≤–∞—Ç–∏—Ç, —Ö–æ—Ç—è –±—ã —Å–∫–æ–ø–∏—Ä—É–µ–º –∞–¥—Ä–µ—Å
  navigator.clipboard.writeText(myWallet)
    .then(() => alert(`üí∏ –ê–¥—Ä–µ—Å —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω:\n${myWallet}\n–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É ${amount} USDT –≤—Ä—É—á–Ω—É—é –≤ Bitget Wallet.`));

  // –ü–æ–ø—Ä–æ–±—É–µ–º –æ—Ç–∫—Ä—ã—Ç—å –∫–æ—à–µ–ª–µ–∫
  window.location.href = url;
});



